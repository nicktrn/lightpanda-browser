name: nightly build

env:
  AWS_ACCESS_KEY_ID: ${{ vars.NIGHTLY_BUILD_AWS_ACCESS_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.NIGHTLY_BUILD_AWS_SECRET_ACCESS_KEY }}
  AWS_BUCKET: ${{ vars.NIGHTLY_BUILD_AWS_BUCKET }}
  AWS_REGION: ${{ vars.NIGHTLY_BUILD_AWS_REGION }}

on:
  schedule:
    - cron: "2 2 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:

permissions:
  contents: write

jobs:
  build-linux-x86_64:
    if: false
    env:
      ARCH: x86_64
      OS: linux

    runs-on: ubuntu-22.04
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # fetch submodules recusively, to get zig-js-runtime submodules also.
          submodules: recursive

      - uses: ./.github/actions/install
        with:
          os: ${{env.OS}}
          arch: ${{env.ARCH}}

      - name: zig build
        run: zig build --release=safe -Doptimize=ReleaseSafe -Dcpu=x86_64 -Dgit_commit=$(git rev-parse --short ${{ github.sha }})

      - name: Rename binary
        run: mv zig-out/bin/lightpanda lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: upload on s3
        run: |
          export DIR=`git show --no-patch --no-notes --pretty='%cs_%h'`
          aws s3 cp --storage-class=GLACIER_IR lightpanda-${{ env.ARCH }}-${{ env.OS }} s3://lpd-nightly-build/${DIR}/lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: Upload the build
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: lightpanda-${{ env.ARCH }}-${{ env.OS }}
          tag: nightly

  build-linux-aarch64:
    env:
      ARCH: aarch64
      OS: linux

    runs-on: ubuntu-22.04-arm
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # fetch submodules recusively, to get zig-js-runtime submodules also.
          submodules: recursive

      - uses: ./.github/actions/install
        with:
          os: ${{env.OS}}
          arch: ${{env.ARCH}}

      - name: zig build
        run: zig build --release=safe -Doptimize=ReleaseSafe -Dgit_commit=$(git rev-parse --short ${{ github.sha }})

      - name: Rename binary
        run: mv zig-out/bin/lightpanda lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: upload on s3
        run: |
          export DIR=`git show --no-patch --no-notes --pretty='%cs_%h'`
          aws s3 cp --storage-class=GLACIER_IR lightpanda-${{ env.ARCH }}-${{ env.OS }} s3://lpd-nightly-build/${DIR}/lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: Upload the build
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: lightpanda-${{ env.ARCH }}-${{ env.OS }}
          tag: nightly

  build-macos-aarch64:
    if: false
    env:
      ARCH: aarch64
      OS: macos

    runs-on: macos-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # fetch submodules recusively, to get zig-js-runtime submodules also.
          submodules: recursive

      - uses: ./.github/actions/install
        with:
          os: ${{env.OS}}
          arch: ${{env.ARCH}}

      - name: zig build
        run: zig build --release=safe -Doptimize=ReleaseSafe -Dgit_commit=$(git rev-parse --short ${{ github.sha }})

      - name: Rename binary
        run: mv zig-out/bin/lightpanda lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: upload on s3
        run: |
          export DIR=`git show --no-patch --no-notes --pretty='%cs_%h'`
          aws s3 cp --storage-class=GLACIER_IR lightpanda-${{ env.ARCH }}-${{ env.OS }} s3://lpd-nightly-build/${DIR}/lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: Upload the build
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: lightpanda-${{ env.ARCH }}-${{ env.OS }}
          tag: nightly

  build-macos-x86_64:
    if: false
    env:
      ARCH: x86_64
      OS: macos

    runs-on: macos-13
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # fetch submodules recusively, to get zig-js-runtime submodules also.
          submodules: recursive

      - uses: ./.github/actions/install
        with:
          os: ${{env.OS}}
          arch: ${{env.ARCH}}

      - name: zig build
        run: zig build --release=safe -Doptimize=ReleaseSafe -Dgit_commit=$(git rev-parse --short ${{ github.sha }})

      - name: Rename binary
        run: mv zig-out/bin/lightpanda lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: upload on s3
        run: |
          export DIR=`git show --no-patch --no-notes --pretty='%cs_%h'`
          aws s3 cp --storage-class=GLACIER_IR lightpanda-${{ env.ARCH }}-${{ env.OS }} s3://lpd-nightly-build/${DIR}/lightpanda-${{ env.ARCH }}-${{ env.OS }}

      - name: Upload the build
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: lightpanda-${{ env.ARCH }}-${{ env.OS }}
          tag: nightly
